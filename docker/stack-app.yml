version: '3.8'

x-laravel-service: &laravel-common
  image: southamerica-east1-docker.pkg.dev/valorizeai/valorize-repo/valorizeai:latest
  environment:
    APP_URL: 'https://valorizeai.felipemalacarne.com.br'
    APP_NAME: 'ValorizeAI'
    APP_ENV: 'production'
    APP_DEBUG: 'false'
    APP_LOCALE: 'pt_BR'
    APP_FALLBACK_LOCALE: 'en_US'
    BCRYPT_ROUNDS: 12
    LOG_CHANNEL: 'stderr'
    LOG_LEVEL: 'debug'
    DB_CONNECTION: 'pgsql'
    DB_HOST: 'postgres'
    DB_PORT: '5432'
    DB_DATABASE: 'valorizeai'
    DB_USERNAME: 'laravel'
    SESSION_DRIVER: 'redis'
    SESSION_ENCRYPT: 'false'
    SESSION_PATH: '/'
    SESSION_DOMAIN: 'valorizeai.felipemalacarne.com.br'
    SESSION_LIFETIME: 120
    BROADCAST_CONNECTION: 'log'
    FILESYSTEM_DISK: 's3' # Use s3 for minio
    QUEUE_CONNECTION: 'redis'
    CACHE_STORE: 'redis'
    OCTANE_SERVER: 'frankenphp'
    TRUSTED_PROXIES: '*'
    TRUSTED_HOSTS: 'valorizeai.felipemalacarne.com.br'
    REDIS_HOST: redis
    # --- File-based secrets for Laravel ---
    APP_KEY_FILE: /run/secrets/app_key
    DB_PASSWORD_FILE: /run/secrets/postgres_password
    # --- S3/Minio Config ---
    AWS_ENDPOINT: 'http://minio:9000'
    AWS_USE_PATH_STYLE_ENDPOINT: 'true'
    AWS_BUCKET: 'default'
    AWS_DEFAULT_REGION: 'us-east-1'
    AWS_ACCESS_KEY_ID_FILE: /run/secrets/minio_root_user
    AWS_SECRET_ACCESS_KEY_FILE: /run/secrets/minio_root_password
    # --- Typesense Config ---
    TYPESENSE_API_KEY_FILE: /run/secrets/typesense_api_key
    TYPESENSE_HOST: 'typesense'
    TYPESENSE_PORT: '8108'
    TYPESENSE_PROTOCOL: 'http'
  secrets:
    - source: app_key
      target: app_key
    - source: postgres_password
      target: postgres_password
    - source: minio_root_user
      target: minio_root_user
    - source: minio_root_password
      target: minio_root_password
    - source: typesense_api_key
      target: typesense_api_key
  networks:
    - valorizeai

services:
  app:
    <<: *laravel-common
    deploy:
      replicas: 2
      restart_policy:
        condition: on-failure
      update_config:
        parallelism: 1
        order: start-first

  worker:
    <<: *laravel-common
    command: ['php', 'artisan', 'horizon']
    healthcheck:
      test: ['CMD-SHELL', 'php artisan horizon:status']
      interval: 60s
      timeout: 10s
      retries: 3
      start_period: 60s
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure

  migrate:
    <<: *laravel-common
    entrypoint: 'php artisan migrate --force'
    deploy:
      replicas: 1
      restart_policy:
        condition: none

  redis:
    image: 'redis:alpine'
    volumes:
      - redis_data:/data
    networks:
      - valorizeai
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure

  minio:
    image: 'minio/minio:latest'
    environment:
      MINIO_ROOT_USER_FILE: /run/secrets/minio_root_user
      MINIO_ROOT_PASSWORD_FILE: /run/secrets/minio_root_password
    volumes:
      - minio_data:/data
    secrets:
      - minio_root_user
      - minio_root_password
    command: 'minio server /data --console-address ":8900"'
    networks:
      - valorizeai
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure

  typesense:
    image: 'typesense/typesense:27.1'
    environment:
      TYPESENSE_DATA_DIR: /typesense-data
      TYPESENSE_API_KEY_FILE: /run/secrets/typesense_api_key
      TYPESENSE_ENABLE_CORS: 'true'
    command: --api-key=/run/secrets/typesense_api_key
    volumes:
      - typesense_data:/data
    secrets:
      - typesense_api_key
    networks:
      - valorizeai
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure

  postgres:
    image: postgres:17.2
    environment:
      POSTGRES_DB: valorizeai
      POSTGRES_USER: laravel
      POSTGRES_PASSWORD_FILE: /run/secrets/postgres_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - valorizeai
    secrets:
      - source: postgres_password
        target: postgres_password
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}']
      interval: 10s
      timeout: 5s
      retries: 5
    deploy:
      mode: replicated
      replicas: 1
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
      update_config:
        parallelism: 1
        order: start-first
      rollback_config:
        parallelism: 1
        order: stop-first

volumes:
  redis_data:
    external: true
    name: valorize_redis_data
  minio_data:
    external: true
    name: valorize_minio_data
  typesense_data:
    external: true
    name: valorize_typesense_data
  postgres_data:
    external: true
    name: valorize_postgres_data

secrets:
  app_key:
    external: true
    name: valorize_app_key
  postgres_password:
    external: true
    name: valorize_postgres_password
  minio_root_user:
    external: true
    name: valorize_minio_root_user
  minio_root_password:
    external: true
    name: valorize_minio_root_password
  typesense_api_key:
    external: true
    name: valorize_typesense_api_key

networks:
  valorizeai:
    driver: overlay
    attachable: true
